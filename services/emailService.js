import nodemailer from "nodemailer";
import dotenv from 'dotenv';
dotenv.config();




class emailService {
  constructor() {
    this.transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST,
      port: process.env.SMTP_PORT,
      secure: true,
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
      tls: {
        rejectUnauthorized: false,
      },
    });
  }

  

  // –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
  async testConnection() {
    try {
      await this.transporter.verify();
      console.log("‚úì SMTP —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤–∏–π");
      return true;
    } catch (error) {
      console.error("‚úó –ü–æ–º–∏–ª–∫–∞ SMTP:", error.message);
      return false;
    }
  }

  // Welcome email –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
  async sendWelcomeEmail(userEmail, userName) {
    try {
      const mailOptions = {
        from: `"Garden Market" <${process.env.EMAIL_USER}>`,
        to: userEmail,
        subject: "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –≤ Garden Market!",
        html: this.getWelcomeTemplate(userName),
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log("‚úì Welcome email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ:", result.messageId);
      return { success: true, messageId: result.messageId };
    } catch (error) {
      console.error("‚úó –ü–æ–º–∏–ª–∫–∞ welcome email:", error);
      return { success: false, error: error.message };
    }
  }

  // Email –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
  async sendVerificationEmail(userEmail, userName, verificationToken) {
    try {
      const verificationUrl = `${process.env.BASE_URL}/verify-email?token=${verificationToken}`;

      const mailOptions = {
        from: `"Garden Market" <${process.env.EMAIL_USER}>`,
        to: userEmail,
        subject: "–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å —Å–≤—ñ–π email - Garden Market",
        html: this.getVerificationTemplate(userName, verificationUrl),
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log("‚úì Verification email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ:", result.messageId);
      return { success: true, messageId: result.messageId };
    } catch (error) {
      console.error("‚úó –ü–æ–º–∏–ª–∫–∞ verification email:", error);
      return { success: false, error: error.message };
    }
  }

   // –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
  async sendPasswordResetEmail(userEmail, userName, resetToken) {
    try {
      const resetUrl = `${process.env.BASE_URL}/reset-password?token=${resetToken}`;
      
      const mailOptions = {
        from: `"Garden Market" <${process.env.EMAIL_USER}>`,
        to: userEmail,
        subject: '–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è - Garden Market',
        html: this.getPasswordResetTemplate(userName, resetUrl)
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log('‚úì Password reset email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ:', result.messageId);
      return { success: true, messageId: result.messageId };
    } catch (error) {
      console.error('‚úó –ü–æ–º–∏–ª–∫–∞ password reset email:', error);
      return { success: false, error: error.message };
    }
  }


   async sendPasswordResetEmail(userEmail, userName, resetToken) {
    try {
      const resetUrl = `${process.env.BASE_URL}/reset-password?token=${resetToken}`;
      
      const mailOptions = {
        from: `"Garden Market" <${process.env.EMAIL_USER}>`,
        to: userEmail,
        subject: '–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è - Garden Market',
        html: this.getPasswordResetTemplate(userName, resetUrl)
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log('‚úì Password reset email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ:', result.messageId);
      return { success: true, messageId: result.messageId };
    } catch (error) {
      console.error('‚úó –ü–æ–º–∏–ª–∫–∞ password reset email:', error);
      return { success: false, error: error.message };
    }
  }

    // –®–∞–±–ª–æ–Ω welcome email
  getWelcomeTemplate(userName) {
    return `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; border: 1px solid #ddd; border-radius: 8px; overflow: hidden;">
        <div style="background: linear-gradient(135deg, #4CAF50, #45a049); color: white; padding: 30px; text-align: center;">
          <h1 style="margin: 0; font-size: 28px;">üå± Garden Market</h1>
          <p style="margin: 10px 0 0 0; font-size: 16px;">–í–∞—à —Å–∞–¥–æ–≤–∏–π –º–∞–≥–∞–∑–∏–Ω –æ–Ω–ª–∞–π–Ω</p>
        </div>
        
        <div style="padding: 30px;">
          <h2 style="color: #333; margin-bottom: 20px;">–ü—Ä–∏–≤—ñ—Ç, ${userName}! üëã</h2>
          <p style="color: #555; line-height: 1.6; margin-bottom: 20px;">
            –î—è–∫—É—î–º–æ –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –≤ Garden Market! –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ:
          </p>
          
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <ul style="color: #333; line-height: 1.8; padding-left: 20px;">
              <li>üõí –ü–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥ —Å–∞–¥–æ–≤–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤</li>
              <li>üåø –ó–∞–º–æ–≤–ª—è—Ç–∏ —Ä–æ—Å–ª–∏–Ω–∏ —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏</li>
              <li>üì¶ –í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω—å</li>
              <li>üíö –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</li>
            </ul>
          </div>
          
          <div style="text-align: center; margin: 30px 0;">
            <a href="${process.env.BASE_URL}" 
               style="background-color: #4CAF50; color: white; padding: 15px 30px; 
                      text-decoration: none; border-radius: 25px; display: inline-block; 
                      font-weight: bold; font-size: 16px;">
              –ü–æ—á–∞—Ç–∏ –ø–æ–∫—É–ø–∫–∏
            </a>
          </div>
          
          <p style="color: #666; font-size: 14px; margin-top: 30px;">
            –Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è: 
            <a href="mailto:${process.env.EMAIL_USER}" style="color: #4CAF50;">${process.env.EMAIL_USER}</a>
          </p>
        </div>
        
        <div style="background-color: #f8f9fa; padding: 20px; text-align: center; color: #666; font-size: 12px;">
          <p>¬© 2025 Garden Market. –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ.</p>
        </div>
      </div>
    `;
  }

   // –®–∞–±–ª–æ–Ω verification email
  getVerificationTemplate(userName, verificationUrl) {
    return `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; border: 1px solid #ddd; border-radius: 8px; overflow: hidden;">
        <div style="background: linear-gradient(135deg, #2196F3, #1976D2); color: white; padding: 30px; text-align: center;">
          <h1 style="margin: 0; font-size: 28px;">üîê –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è Email</h1>
        </div>
        
        <div style="padding: 30px;">
          <h2 style="color: #333;">–ü—Ä–∏–≤—ñ—Ç, ${userName}!</h2>
          <p style="color: #555; line-height: 1.6;">
            –©–æ–± –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –≤ Garden Market, –ø—ñ–¥—Ç–≤–µ—Ä–¥—å—Ç–µ —Å–≤—ñ–π email –∞–¥—Ä–µ—Å.
          </p>
          
          <div style="text-align: center; margin: 30px 0;">
            <a href="${verificationUrl}" 
               style="background-color: #2196F3; color: white; padding: 15px 30px; 
                      text-decoration: none; border-radius: 25px; display: inline-block; 
                      font-weight: bold; font-size: 16px;">
              ‚úì –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ Email
            </a>
          </div>
          
          <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 20px 0;">
            <p style="color: #856404; margin: 0; font-size: 14px;">
              ‚ö†Ô∏è –ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥—ñ–π—Å–Ω–µ –ø—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω
            </p>
          </div>
          
          <p style="color: #666; font-size: 14px;">
            –Ø–∫—â–æ –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø—Ä–∞—Ü—é—î, —Å–∫–æ–ø—ñ—é–π—Ç–µ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:<br>
            <span style="word-break: break-all; color: #2196F3;">${verificationUrl}</span>
          </p>
        </div>
      </div>
    `;
  }

  // –®–∞–±–ª–æ–Ω password reset
  getPasswordResetTemplate(userName, resetUrl) {
    return `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; border: 1px solid #ddd; border-radius: 8px; overflow: hidden;">
        <div style="background: linear-gradient(135deg, #FF9800, #F57C00); color: white; padding: 30px; text-align: center;">
          <h1 style="margin: 0; font-size: 28px;">üîë –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è</h1>
        </div>
        
        <div style="padding: 30px;">
          <h2 style="color: #333;">–ü—Ä–∏–≤—ñ—Ç, ${userName}!</h2>
          <p style="color: #555; line-height: 1.6;">
            –í–∏ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–æ–≥–æ –∞–∫–∞—É–Ω—Ç–∞ –≤ Garden Market.
          </p>
          
          <div style="text-align: center; margin: 30px 0;">
            <a href="${resetUrl}" 
               style="background-color: #FF9800; color: white; padding: 15px 30px; 
                      text-decoration: none; border-radius: 25px; display: inline-block; 
                      font-weight: bold; font-size: 16px;">
              üîÑ –í—ñ–¥–Ω–æ–≤–∏—Ç–∏ –ø–∞—Ä–æ–ª—å
            </a>
          </div>
          
          <div style="background-color: #ffebee; border: 1px solid #ffcdd2; padding: 15px; border-radius: 5px; margin: 20px 0;">
            <p style="color: #c62828; margin: 0; font-size: 14px;">
              ‚ö†Ô∏è –ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥—ñ–π—Å–Ω–µ –ø—Ä–æ—Ç—è–≥–æ–º 1 –≥–æ–¥–∏–Ω–∏
            </p>
          </div>
          
          <p style="color: #666; font-size: 14px;">
            –Ø–∫—â–æ –≤–∏ –Ω–µ –∑–∞–ø—Ä–æ—à—É–≤–∞–ª–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—ñ–≥–Ω–æ—Ä—É–π—Ç–µ —Ü–µ–π –ª–∏—Å—Ç.
          </p>
        </div>
      </div>
    `;
  }
}

// ...existing code...
export default emailService;
